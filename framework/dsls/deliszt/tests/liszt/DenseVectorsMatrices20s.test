import Liszt.Language._
import Liszt.MetaInteger._


@lisztcode
object DenseVectorsMatrices20s {
	val f_twosies = 		FieldWithConst[Cell, Vec[_21,Float]](Vec(0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f))
	val f_threesies = 	FieldWithConst[Cell, Vec[_22,Float]](Vec(0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f))
	
	val m_twosies = 		FieldWithConst[Cell, Mat[_21,_21,Int]](Mat(Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)))
	val m_threesies = 	FieldWithConst[Cell, Mat[_22,_22,Int]](Mat(Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Vec(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)))

		
	def main() {
		var a = Vec(0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f,0.0f)
		var b = Vec(1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f,1.0f)
		//var c = 2*b
		var d = a + b
		Print(d)
		Print("oi!")
	}
}



